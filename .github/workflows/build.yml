name: Build

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: read

jobs:
  get-commits:
    runs-on: ubuntu-24.04
    outputs: 
      commits: ${{ steps.get-commits-step.outputs.commits }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get a commit list
        id: get-commits-step
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Running on PR — checking all commits..."
            commits=$(gh pr view ${{ github.event.number }} --repo ${{ github.repository }} --json commits --jq '.commits[].oid')
          else
            echo "Running on push to main — checking HEAD only..."
            commits=$(git rev-parse HEAD)
          fi

          echo "get-commits job -- commit list:"
          echo "$commits"

          # store $commits in the output
          echo 'commits<<EOF' >> "$GITHUB_OUTPUT"
          echo "$commits" >> "$GITHUB_OUTPUT"
          echo 'EOF' >> "$GITHUB_OUTPUT"

  build:
    needs: get-commits
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - name: obc-native
            board: native_sim
            path: ./apps/obc
          - name: obc-nucleo
            board: nucleo_g431rb
            path: ./apps/obc
          - name: pay-native
            board: native_sim
            path: ./apps/pay
          - name: pay-nucleo
            board: nucleo_h743zi
            path: ./apps/pay

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Install dependencies
        run: |
          chmod +x ./scripts/install_dependencies.sh
          ./scripts/install_dependencies.sh

      - name: Setup Python venv
        run: |
          chmod +x ./scripts/setup_python_venv.sh
          ./scripts/setup_python_venv.sh

      - name: Setup west workspace
        run: |
          chmod +x ./scripts/setup_west_workspace.sh
          ./scripts/setup_west_workspace.sh

      - name: Builds
        run: |
          set -e
          source ../.venv/bin/activate
          source ../zephyr/zephyr-env.sh

          echo "Commit list: $commits"
          for commit in $commits; do
            echo "Running a build on commit: $commit"
            git checkout $commit
            west -v build -b ${{ matrix.board }} ${{ matrix.path }} -p
          done
        env:
          commits: ${{ needs.get-commits.outputs.commits }}
