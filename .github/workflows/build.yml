name: Build

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: obc-native
            board: native_sim
            path: ./apps/obc
          - name: obc-nucleo
            board: nucleo_g431rb
            path: ./apps/obc
          - name: pay-native
            board: native_sim
            path: ./apps/pay
          - name: pay-nucleo
            board: nucleo_h743zi
            path: ./apps/pay

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Install dependencies
        run: |
          chmod +x ./scripts/install_dependencies.sh
          ./scripts/install_dependencies.sh

      - name: Setup Python venv
        run: |
          chmod +x ./scripts/setup_python_venv.sh
          ./scripts/setup_python_venv.sh

      - name: Setup west workspace
        run: |
          chmod +x ./scripts/setup_west_workspace.sh
          ./scripts/setup_west_workspace.sh

      - name: Builds
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set +e
          source ../.venv/bin/activate
          source ../zephyr/zephyr-env.sh

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Running on PR — checking all commits..."
            commits=$(gh pr view ${{ github.event.number }} --repo ${{ github.repository }} --json commits --jq '.commits[].oid')
          else
            echo "Running on push to main — checking HEAD only..."
            commits=$(git rev-parse HEAD)
          fi

          echo "Commit list: $commits"

          failed_commits=""
          for commit in $commits; do
            echo "::group::$commit"

            git checkout $commit
            west -v build -b ${{ matrix.board }} ${{ matrix.path }} -p
            build_status=$?

            echo "::endgroup::"

            if [ $build_status -ne 0 ]; then
              echo "Failed to build $commit."
              failed_commits+="$commit "
            fi
          done

          echo "Board: ${{ matrix.board }}, path: ${{ matrix.path }}."
          if [ -z "$failed_commits" ]; then
            echo "All commits are built successfully."
            exit 0
          else
            echo "One or more commits failed: $failed_commits."
            exit 1
          fi
